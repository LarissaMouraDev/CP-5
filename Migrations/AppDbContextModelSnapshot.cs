// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MotosScan.Data;

#nullable disable

namespace MotosScan.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.0");

            modelBuilder.Entity("MotosScan.Models.Manutencao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal?>("Custo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("DataConclusao")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataManutencao")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<int>("MotoId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("MotoristaId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Observacoes")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<string>("Oficina")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int?>("Quilometragem")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("TipoManutencao")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("MotoId");

                    b.HasIndex("MotoristaId");

                    b.ToTable("Manutencoes");
                });

            modelBuilder.Entity("MotosScan.Models.Moto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("ImagemUrl")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("Localizacao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UltimoCheckIn")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UltimoCheckOut")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Placa")
                        .IsUnique();

                    b.ToTable("Motos");
                });

            modelBuilder.Entity("MotosScan.Models.Motorista", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CNH")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("TEXT");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("TEXT");

                    b.Property<string>("CategoriaCNH")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DataAdmissao")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int?>("MotoAtualId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefone")
                        .HasMaxLength(15)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CNH")
                        .IsUnique();

                    b.HasIndex("CPF")
                        .IsUnique();

                    b.HasIndex("MotoAtualId");

                    b.ToTable("Motoristas");
                });

            modelBuilder.Entity("MotosScan.Models.Manutencao", b =>
                {
                    b.HasOne("MotosScan.Models.Moto", "Moto")
                        .WithMany("Manutencoes")
                        .HasForeignKey("MotoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MotosScan.Models.Motorista", "Motorista")
                        .WithMany("Manutencoes")
                        .HasForeignKey("MotoristaId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Moto");

                    b.Navigation("Motorista");
                });

            modelBuilder.Entity("MotosScan.Models.Motorista", b =>
                {
                    b.HasOne("MotosScan.Models.Moto", "MotoAtual")
                        .WithMany("Motoristas")
                        .HasForeignKey("MotoAtualId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("MotoAtual");
                });

            modelBuilder.Entity("MotosScan.Models.Moto", b =>
                {
                    b.Navigation("Manutencoes");

                    b.Navigation("Motoristas");
                });

            modelBuilder.Entity("MotosScan.Models.Motorista", b =>
                {
                    b.Navigation("Manutencoes");
                });
#pragma warning restore 612, 618
        }
    }
}
